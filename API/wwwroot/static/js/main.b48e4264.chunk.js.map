{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/ImageUpload/PhotoWidgetCropper.tsx","app/common/ImageUpload/PhotoWidgetDropzone.tsx","app/common/ImageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","startWith","userStore","logout","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","fbLogin","accessToken","refreshToken","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingIninial","console","log","loadActivity","getActivity","runInAction","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendace","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","fbAccessToken","fbLoading","refreshTokenTimeout","creds","setToken","startRefreshTokenTimer","modalStore","closeModal","window","localStorage","removeItem","getUser","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","stopRefreshTokenTimer","jwtToken","atob","split","timeout","exp","now","setTimeout","clearTimeout","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","bio","extra","Icon","styles","bordeColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marinBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","marginBottom","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","Divider","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderColor","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.b48e4264.chunk.js","sourcesContent":["export interface Pagination {\r\n    currentPage:number;\r\n    itemsPerPage:number;\r\n    totalItems:number;\r\n    totalPages:number;\r\n}\r\n\r\n\r\nexport class PaginatedResult<T>{\r\n    data:T | any;\r\n    pagination:Pagination| any;\r\n\r\n    constructor(data:T,pagination:Pagination){\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n\r\n}\r\n\r\nexport class PagingParams {\r\n    pageNumber;\r\n    pageSize;\r\n\r\n    constructor(pageNumber=1,pageSize=2){\r\n        this.pageNumber=pageNumber;\r\n        this.pageSize=pageSize;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\nimport { Photo, Profile } from \"../models/profile\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { UserActivity } from \"../models/userActivity\";\r\nimport { store } from \"../stores/store\";\r\n\r\nconst slepp = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config:any) =>{\r\n    const token = store.commonStore.token;\r\n    if(token) config.headers.Authorization = 'Bearer '+token;\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if(process.env.NODE_ENV === 'development')  await slepp(1000);\r\n    const pagination = response.headers['pagination'];\r\n    if(pagination){\r\n        response.data = new PaginatedResult(response.data,JSON.parse(pagination));\r\n        return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    const { data, status,config ,headers}:any = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if(typeof data === 'string'){\r\n                toast.error(data);\r\n            }\r\n            if(config.method === 'get' && data.errors.hasOwnProperty('id')){\r\n                history.push('/not-found');\r\n            }\r\n            if(data.errors){\r\n                const modalStateErrors = [];\r\n                for(const key in data.errors){\r\n                    if(data.errors[key]){\r\n                        modalStateErrors.push(data.errors[key]);\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();\r\n            }else{\r\n                toast.error(data);\r\n            }\r\n            break;\r\n        case 401:\r\n            if(status === 401 && headers['www-authenticate'].startWith('Bearer error=\"invalid_token\"')){\r\n                store.userStore.logout();\r\n                toast.error('Session expired - please login again');\r\n            }\r\n            //toast.error('unauthorised');\r\n            break;\r\n        case 404:\r\n            history.push('/not-found');\r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n            history.push('/server-error');\r\n            break;\r\n    }\r\n    return Promise.reject(error);\r\n})\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    delete: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n    list: (params:URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities',{params})\r\n        .then(responseBody),\r\n    details: (id: string) => requests.get<Activity>('/activities/' + id),\r\n    create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\r\n    update: (activity: ActivityFormValues) => requests.put<void>('/activities/' + activity.id, activity),\r\n    delete: (id: string) => requests.delete<void>('/activities/' + id),\r\n    attend: (id: string) => requests.post<void>('/activities/'+id+'/attend',{}),\r\n}\r\n\r\nconst Account = {\r\n    current: () => requests.get<User>('/account'),\r\n    login: (user: UserFormValues) => requests.post<User>('/account/login',user),\r\n    register: (user: UserFormValues) => requests.post<User>('/account/register',user),\r\n    fbLogin:(accessToken:string)=>requests.post<User>('/account/fbLogin?accessToken='+accessToken,{}),\r\n    refreshToken:()=>requests.post<User>('/account/refreshToken',{})\r\n}\r\n\r\nconst Profiles = {\r\n    get: (username: string) => requests.get<Profile>('/profiles/'+username),\r\n    uploadPhoto:(file:Blob) =>{\r\n        let formData = new FormData();\r\n        formData.append('File',file);\r\n        return axios.post<Photo>('photos',formData,{\r\n            headers:{'Content-type':'multipart/form-data'}\r\n        })\r\n    },\r\n    setMainPhoto:(id:string) => requests.post('/photos/'+id+'/setMain',{}),\r\n    deletePhoto:(id:string) => requests.delete('/photos/'+id),\r\n    updateProfile: (profile: Partial<Profile>) => requests.put(`/profiles`,profile),\r\n    updateFollowing:(username:string) => requests.post('/follow/'+username,{}),\r\n    listFollowings: (username: string,predicate:string) => requests.get<Profile[]>('/follow/'+username+'?predicate='+predicate),\r\n    listActivities: (username: string, predicate: string) =>requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\r\n}\r\n\r\n\r\nconst agent = {\r\n    Activities,\r\n    Account,\r\n    Profiles\r\n}\r\n\r\nexport default agent;","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n    id: string;\r\n    title: string;\r\n    date: Date|null;\r\n    description: string;\r\n    category: string;\r\n    city: string;\r\n    venue: string;\r\n    hostUsername:string;\r\n    isCancelled:boolean;\r\n    isGoing:boolean;\r\n    isHost:boolean;\r\n    host?:Profile;\r\n    attendees:Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n    constructor(init?:ActivityFormValues){\r\n        Object.assign(this,init);\r\n    }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n    id?:string=undefined;\r\n    title:string='';\r\n    category:string='';\r\n    description:string='';\r\n    date:Date|null=null;\r\n    city:string='';\r\n    venue:string='';\r\n\r\n    constructor(activity?:ActivityFormValues){\r\n        if(activity){\r\n            this.id = activity.id;\r\n            this.title = activity.title;\r\n            this.category = activity.category;\r\n            this.description = activity.description;\r\n            this.date = activity.date;\r\n            this.city = activity.city;\r\n            this.venue = activity.venue;\r\n        }\r\n    }\r\n}","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n    username:string;\r\n    displayName:string;\r\n    image?:string;\r\n    bio?:string;\r\n    followersCount:number;\r\n    followingCount:number;\r\n    following:boolean;\r\n    photos:Photo[]\r\n}\r\n\r\nexport class Profile implements Profile{\r\n    constructor(user:User){\r\n        this.username = user.username;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n    }\r\n}\r\n\r\nexport interface Photo {\r\n    id:string;\r\n    url:string;\r\n    isMain:boolean;\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { format } from 'date-fns';\r\nimport { store } from \"./store\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\n\r\nexport default class ActivityStore {\r\n    activityRegistry = new Map<string, Activity>();\r\n    selectedActivity: Activity | undefined = undefined;\r\n    editMode = false;\r\n    loading = false;\r\n    loadingInitial = false;\r\n    pagination: Pagination | null = null;\r\n    pagingParams = new PagingParams();\r\n    predicate = new Map().set('all', true);\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.predicate.keys(),\r\n            () => {\r\n                this.pagingParams = new PagingParams();\r\n                this.activityRegistry.clear();\r\n                this.loadActivities();\r\n            }\r\n        )\r\n    }\r\n\r\n    setPagingParams = (pagingParams: PagingParams) => {\r\n        this.pagingParams = pagingParams;\r\n    }\r\n\r\n    setPredicate = (predicate: string, value: string | Date) => {\r\n        const resetPredicate = () => {\r\n            this.predicate.forEach((value, key) => {\r\n                if (key !== 'startDate') this.predicate.delete(key);\r\n            })\r\n        }\r\n        switch (predicate) {\r\n            case 'all': \r\n                resetPredicate(); \r\n                this.predicate.set('all', true);\r\n                break;\r\n            case 'isGoing':     \r\n                resetPredicate(); \r\n                this.predicate.set('isGoing', true); \r\n                break;\r\n            case 'isHost': \r\n                resetPredicate();\r\n                this.predicate.set('isHost', true); \r\n                break;\r\n            case 'startDate':\r\n                 this.predicate.delete('startDate');\r\n                 this.predicate.set('startDate', value); break;\r\n        }\r\n    }\r\n\r\n    get axiosParams() {\r\n        const params = new URLSearchParams();\r\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n        params.append('pageSize', this.pagingParams.pageSize.toString());\r\n        this.predicate.forEach((value, key) => {\r\n            if (key === 'startDate') {\r\n                params.append(key, (value as Date).toISOString())\r\n            } else {\r\n                params.append(key, value)\r\n            }\r\n        })\r\n        return params;\r\n    }\r\n\r\n    get activitiesByDate() {\r\n        return Array.from(this.activityRegistry.values()).sort((a, b) =>\r\n            a.date!.getTime() - b.date!.getTime());\r\n    }\r\n\r\n    get groupedActivities() {\r\n        return Object.entries(\r\n            this.activitiesByDate.reduce((activities, activity) => {\r\n                const date = format(activity.date!, 'dd MMM yyyy');\r\n                activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n                return activities;\r\n            }, {} as { [key: string]: Activity[] })\r\n        )\r\n    }\r\n\r\n    loadActivities = async () => {\r\n        this.loadingInitial = true;\r\n        try {\r\n            const result = await agent.Activities.list(this.axiosParams);\r\n            result.data.forEach((activity: Activity) => {\r\n                this.setActivity(activity);\r\n            });\r\n            this.setPagination(result.pagination);\r\n            this.setLoadingIninial(false);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.setLoadingIninial(false);\r\n        }\r\n    }\r\n\r\n    setPagination = (pagination: Pagination) => {\r\n        this.pagination = pagination;\r\n    }\r\n\r\n    loadActivity = async (id: string) => {\r\n        let activity = this.getActivity(id);\r\n        if (activity) {\r\n            this.selectedActivity = activity;\r\n            return activity;\r\n        } else {\r\n            this.loadingInitial = true;\r\n\r\n            try {\r\n                activity = await agent.Activities.details(id);\r\n                this.setActivity(activity);\r\n                runInAction(() => {\r\n                    this.selectedActivity = activity;\r\n                })\r\n                this.setLoadingIninial(false);\r\n                return activity;\r\n            } catch (error) {\r\n                console.log(error);\r\n                this.setLoadingIninial(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setActivity = (activity: Activity) => {\r\n        const user = store.userStore.user;\r\n        if (user) {\r\n            activity.isGoing = activity.attendees!.some(\r\n                a => a.username === user.username\r\n            )\r\n            activity.isHost = activity.hostUsername === user.username;\r\n            activity.host = activity.attendees?.find(x => x.username === activity.hostUsername);\r\n        }\r\n        activity.date = new Date(activity.date!);\r\n        this.activityRegistry.set(activity.id, activity);\r\n    }\r\n\r\n    private getActivity = (id: string) => {\r\n        return this.activityRegistry.get(id);\r\n    }\r\n\r\n    setLoadingIninial = (state: boolean) => {\r\n        this.loadingInitial = state;\r\n    }\r\n\r\n    createActivity = async (activity: ActivityFormValues) => {\r\n        const user = store.userStore.user;\r\n        const attendee = new Profile(user!);\r\n        try {\r\n            await agent.Activities.create(activity);\r\n            const newActivity = new Activity(activity);\r\n            newActivity.hostUsername = user!.username;\r\n            newActivity.attendees = [attendee];\r\n            this.setActivity(newActivity);\r\n            runInAction(() => {\r\n                this.selectedActivity = newActivity;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    updateActivity = async (activity: ActivityFormValues) => {\r\n        try {\r\n            await agent.Activities.update(activity);\r\n            runInAction(() => {\r\n                if (activity.id) {\r\n                    let updatedActivity = { ...this.getActivity(activity.id), ...activity }\r\n                    this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n                    this.selectedActivity = updatedActivity as Activity;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    deleteActivity = async (id: string) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.delete(id);\r\n            runInAction(() => {\r\n                this.activityRegistry.delete(id);\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n    updateAttendace = async () => {\r\n        const user = store.userStore.user;\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                if (this.selectedActivity?.isGoing) {\r\n                    this.selectedActivity.attendees =\r\n                        this.selectedActivity.attendees?.filter(a => a.username !== user?.username);\r\n\r\n                    this.selectedActivity.isGoing = false;\r\n                } else {\r\n                    const attendee = new Profile(user!);\r\n                    this.selectedActivity?.attendees?.push(attendee);\r\n                    this.selectedActivity!.isGoing = true;\r\n                }\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n            });\r\n        } catch (error) {\r\n            console.log(error)\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    cancelActivityToggle = async () => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    clearSelectedActivity = () => {\r\n        this.selectedActivity = undefined;\r\n    }\r\n\r\n    updateAttendeeFollowing = (username: string) => {\r\n        this.activityRegistry.forEach(activity => {\r\n            activity.attendees.forEach(attendee => {\r\n                if (attendee.username === username) {\r\n                    attendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n                    attendee.following = !attendee.following;\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile } from \"../models/profile\";\r\nimport { UserActivity } from \"../models/userActivity\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n    profile: Profile | null = null;\r\n    loadingProfile = false;\r\n    uploading = false;\r\n    loading = false;\r\n    followings: Profile[] = [];\r\n    loadingFollowings = false;\r\n    activeTab = 0;\r\n    userActivities: UserActivity[] = [];\r\n    loadingActivities = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.activeTab,\r\n            activeTab => {\r\n                if (activeTab === 3 || activeTab === 4) {\r\n                    const predicate = activeTab === 3 ? 'followers' : 'following';\r\n                    this.loadFollowings(predicate);\r\n                } else {\r\n                    this.followings = [];\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    setActiveTab = (activeTab: any) => {\r\n        this.activeTab = activeTab;\r\n    }\r\n\r\n    get isCurrentUser() {\r\n        if (store.userStore.user && this.profile) {\r\n            return store.userStore.user.username === this.profile.username;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    loadProfile = async (username: string) => {\r\n        this.loadingProfile = true;\r\n        try {\r\n            const profile = await agent.Profiles.get(username);\r\n            runInAction(() => {\r\n                this.profile = profile;\r\n                this.loadingProfile = false;\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loadingProfile = false);\r\n        }\r\n    }\r\n\r\n    uploadPhoto = async (file: Blob) => {\r\n        this.uploading = true;\r\n        try {\r\n            const response = await agent.Profiles.uploadPhoto(file);\r\n            const photo = response.data;\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos?.push(photo);\r\n                    if (photo.isMain && store.userStore.user) {\r\n                        store.userStore.setImage(photo.url);\r\n                        this.profile.image = photo.url;\r\n                    }\r\n                }\r\n                this.uploading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.uploading = false);\r\n        }\r\n    }\r\n\r\n    setMainPhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n\r\n        try {\r\n            await agent.Profiles.setMainPhoto(photo.id);\r\n            store.userStore.setImage(photo.url);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.photos) {\r\n                    this.profile.photos.find(p => p.isMain)!.isMain = false;\r\n                    this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\r\n                    this.profile.image = photo.url;\r\n                    this.loading = false\r\n                }\r\n            });\r\n        } catch (error) {\r\n            runInAction(() => this.loading = false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    deletePhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.deletePhoto(photo.id);\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos = this.profile.photos.filter(p => p.id !== photo.id);\r\n                    this.loading = false\r\n                }\r\n            });\r\n        } catch (error) {\r\n            runInAction(() => this.loading = false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    updateProfile = async (profile: Partial<Profile>) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateProfile(profile);\r\n            runInAction(() => {\r\n                if (profile.displayName && profile.displayName !==\r\n                    store.userStore.user?.displayName) {\r\n                    store.userStore.setDisplayName(profile.displayName);\r\n                }\r\n                this.profile = { ...this.profile, ...profile as Profile };\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    updateFollowing = async (username: string, following: boolean) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateFollowing(username);\r\n            store.activityStore.updateAttendeeFollowing(username);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\r\n                    following ? this.profile.followersCount++ : this.profile.followersCount--;\r\n                    this.profile.following = !this.profile.following;\r\n                }\r\n                if (this.profile && this.profile.username === store.userStore.user?.username) {\r\n                    following ? this.profile.followingCount++ : this.profile.followingCount--;\r\n                }\r\n                this.followings.forEach(profile => {\r\n                    if (profile.username === username) {\r\n                        profile.following ? profile.followersCount-- : profile.followersCount++;\r\n                        profile.following = !profile.following;\r\n                    }\r\n                });\r\n                this.loading = false;\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    loadFollowings = async (predicate: string) => {\r\n        this.loadingFollowings = true;\r\n        try {\r\n            const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\r\n            runInAction(() => {\r\n                this.followings = followings;\r\n                this.loadingFollowings = false;\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loadingFollowings = false);\r\n        }\r\n\r\n    }\r\n\r\n    loadUserActivities = async (username: string, predicate?: string) => {\r\n        this.loadingActivities = true;\r\n        try {\r\n            const activities = await agent.Profiles.listActivities(username,\r\n                predicate!);\r\n            runInAction(() => {\r\n                this.userActivities = activities;\r\n                this.loadingActivities = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loadingActivities = false;\r\n            })\r\n        }\r\n    }\r\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n    user: User | null = null;\r\n    fbAccessToken:string|null=null;\r\n    fbLoading=false;\r\n    refreshTokenTimeout:any;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    get isLoggedIn() {\r\n        return !!this.user;\r\n    }\r\n\r\n    login = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            this.startRefreshTokenTimer(user);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n\r\n    getUser = async () => {\r\n        try {\r\n            const user = await agent.Account.current();\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            this.startRefreshTokenTimer(user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    register = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.token);\r\n            this.startRefreshTokenTimer(user);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    setImage = (image: string) => {\r\n        if (this.user) this.user.image = image;\r\n    }\r\n\r\n    setDisplayName = (name: string) => {\r\n        if (this.user) this.user.displayName = name;\r\n    }\r\n\r\n    getFacebookLoginStatus = async () =>{\r\n        window.FB.getLoginStatus(response => {\r\n            if(response.status === 'connected'){\r\n                this.fbAccessToken = response.authResponse.accessToken;\r\n            }\r\n        })\r\n    }\r\n\r\n    facebookLogin=()=>{\r\n        this.fbLoading = true;\r\n        const apiLogin = (accessToken:string) =>{\r\n            agent.Account.fbLogin(accessToken).then(user =>{\r\n                store.commonStore.setToken(user.token);\r\n                this.startRefreshTokenTimer(user);\r\n                runInAction(()=>{\r\n                  this.user = user;\r\n                  this.fbLoading = false;\r\n                })\r\n                history.push('/activities');\r\n            }).catch(error =>{\r\n                console.log(error);\r\n                runInAction(()=>this.fbLoading = false);\r\n            })\r\n        }\r\n        if(this.fbAccessToken){\r\n            apiLogin(this.fbAccessToken);\r\n        }else{\r\n           window.FB.login(response => {\r\n               apiLogin(response.authResponse.accessToken)\r\n           },{scope:'public_profile,email'}) \r\n        }\r\n    }\r\n\r\n    refreshToken = async () => {\r\n        this.stopRefreshTokenTimer();\r\n        try{\r\n            const user = await agent.Account.refreshToken();\r\n            runInAction(()=> this.user = user);\r\n            store.commonStore.setToken(user.token);\r\n            this.startRefreshTokenTimer(user);\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    private startRefreshTokenTimer(user:User){\r\n        const jwtToken = JSON.parse(atob(user.token.split('.')[1]));\r\n        const expires = new Date(jwtToken.exp * 1000);\r\n        const timeout = expires.getTime() - Date.now() - (60 * 1000);\r\n        this.refreshTokenTimeout = setTimeout(this.refreshToken,timeout)\r\n    }\r\n\r\n    private stopRefreshTokenTimer(){\r\n        clearTimeout(this.refreshTokenTimeout);\r\n    }\r\n}","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store{\r\n    activityStore:ActivityStore;\r\n    commonStore:CommonStore;\r\n    userStore:UserStore;\r\n    modalStore:ModalStore;\r\n    profileStore:ProfileStore;\r\n    commentStore:CommentStore;\r\n}\r\n\r\nexport const store:Store ={\r\n    activityStore:new ActivityStore(),\r\n    commonStore:new CommonStore(),\r\n    userStore:new UserStore(),\r\n    modalStore:new ModalStore(),\r\n    profileStore:new ProfileStore(),\r\n    commentStore:new CommentStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore(){\r\n    return useContext(StoreContext);\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n    error:ServerError | null = null;\r\n    token:string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            ()=> this.token,\r\n            token =>{\r\n                if (token) {\r\n                    window.localStorage.setItem('jwt',token);\r\n                }else{\r\n                    window.localStorage.removeItem('jwt')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setServerError = (error:ServerError) =>{\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token:string|null) =>{\r\n        this.token = token;\r\n    }\r\n\r\n    setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\";\r\n\r\ninterface Modal {\r\n    open:boolean;\r\n    body:JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n    modal:Modal = {\r\n        open:false,\r\n        body:null\r\n    }\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n\r\n    openModal = (content:JSX.Element) =>{\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    closeModal = () =>{\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n    comments: ChatComment[] = [];\r\n    hubConnection: HubConnection | null = null;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    createHubConnection = (activityId:string) =>{\r\n        if(store.activityStore.selectedActivity){\r\n            this.hubConnection = new HubConnectionBuilder()\r\n            .withUrl(process.env.REACT_APP_CHAT_URL+'?activityId='+activityId,{\r\n                accessTokenFactory:()=> store.userStore.user?.token!\r\n            })\r\n            .withAutomaticReconnect()\r\n            .configureLogging(LogLevel.Information)\r\n            .build();\r\n\r\n            this.hubConnection.start().catch(error => console.log('Error establishing the connection: ',error));\r\n\r\n            this.hubConnection.on('LoadComments',(comments:ChatComment[]) => {\r\n\r\n                runInAction(()=>{\r\n                    comments.forEach(comment =>{\r\n                        comment.createdAt = new Date(comment.createdAt + 'Z');\r\n                    })\r\n                    this.comments = comments\r\n                });\r\n            });\r\n\r\n            this.hubConnection.on('ReceiveComment',(comment:ChatComment) => {\r\n                runInAction(()=>{\r\n                    comment.createdAt = new Date(comment.createdAt);\r\n                    this.comments.unshift(comment);\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    stopHubConnection = () => {\r\n        this.hubConnection?.stop().catch(error => console.log('Error stopping  connection: ',error));\r\n    }\r\n\r\n    clearComments = () => {\r\n        this.comments = [];\r\n        this.stopHubConnection();\r\n    }\r\n\r\n    addComment = async (values:any) => {\r\n        values.activityId = store.activityStore.selectedActivity?.id;\r\n        try{\r\n            await this.hubConnection?.invoke('SendComment',values);\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Button, Container, Menu, Image, Dropdown } from 'semantic-ui-react';\r\nimport { useStore } from '../stores/store';\r\n\r\n\r\nexport default observer(function NavBar() {\r\n\r\n    const { userStore: { user, logout } } = useStore();\r\n\r\n    return (\r\n        <Menu inverted fixed='top'>\r\n            <Container>\r\n                <Menu.Item as={NavLink} to='/' exact header>\r\n                    <img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: '10px' }} />\r\n                    Reactivities\r\n                </Menu.Item>\r\n                <Menu.Item as={NavLink} to='/activities' name='Activities' />\r\n                <Menu.Item as={NavLink} to='/errors' name='Errors' />\r\n                <Menu.Item>\r\n                    <Button as={NavLink} to='/createActivity' positive content='Create Activity' />\r\n                </Menu.Item>\r\n                <Menu.Item position='right'>\r\n                    <Image src={user?.image || '/assets/user.png'} avatar spaced='right' />\r\n                    <Dropdown pointing='top left' text={user?.displayName}>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item as={Link} to={'/profiles/' + user?.username} text='My Profile' icon='user' />\r\n                            <Dropdown.Item onClick={logout} text='Logout' icon='power' />\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Menu.Item>\r\n            </Container>\r\n        </Menu>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header,Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ActivityFilters (){\r\n    const {activityStore:{predicate,setPredicate}} = useStore();\r\n    return (\r\n        <>\r\n        <Menu vertical size='large' style={{width:'100%',marginTop:25}}>\r\n            <Header icon='filter' attached color='teal' content='Filters'/>\r\n            <Menu.Item \r\n                content='All Activites'\r\n                active={predicate.has('all')}\r\n                onClick={()=>setPredicate('all','true')}\r\n            />\r\n            <Menu.Item \r\n                content=\"I'm going\"\r\n                active={predicate.has('isGoing')}\r\n                onClick={()=>setPredicate('isGoing','true')}\r\n            />\r\n            <Menu.Item \r\n                content=\"I'm hosting\"            \r\n                active={predicate.has('isHost')}\r\n                onClick={()=>setPredicate('isHost','true')}\r\n            />\r\n        </Menu>\r\n        <Header/>\r\n        <Calendar\r\n            onChange={(date:any)=>setPredicate('startDate',date as Date)}\r\n            value={predicate.get('startDate')||new Date()}\r\n        />\r\n        </>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n    profile:Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({profile}:Props){\r\n    const {profileStore,userStore} = useStore();\r\n    const {updateFollowing,loading} = profileStore;\r\n    if(userStore.user?.username === profile.username) return null;\r\n    \r\n    function handleFollow(e:SyntheticEvent,username:string){\r\n        e.preventDefault();\r\n        profile.following ? updateFollowing(username,false):updateFollowing(username,true);\r\n    }\r\n\r\n    return (\r\n        <Reveal animated='move'>\r\n        <Reveal.Content visible style={{ width: '100%' }}>\r\n            <Button \r\n                fluid \r\n                color='teal' \r\n                content={profile.following ? 'Following':'Not following'} />\r\n        </Reveal.Content>\r\n        <Reveal.Content hidden style={{ width: '100%' }}>\r\n            <Button\r\n                fluid\r\n                basic\r\n                color={profile.following ? 'red' : 'green'}\r\n                content={profile.following ? 'Unfollow' : 'Follow'}\r\n                loading={loading}\r\n                onClick={(e)=>handleFollow(e,profile.username)} />\r\n        </Reveal.Content>\r\n    </Reveal>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Icon, Image } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport FollowButton from './FollowButton';\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n    function truncate(str: string | undefined) {\r\n        if (str) {\r\n            return str.length > 40 ? str.substring(0, 37) + '...' : str;\r\n        }\r\n    }\r\n    return (\r\n        <Card as={Link} to={`/profiles/${profile.username}`}>\r\n            <Image src={profile.image || '/assets/user.png'} />\r\n            <Card.Content>\r\n                <Card.Header>{profile.displayName}</Card.Header>\r\n                <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Icon name='user' />\r\n                {profile.followersCount} followers\r\n            </Card.Content>\r\n            <FollowButton profile={profile} />\r\n        </Card>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Image, List, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n    attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({ attendees }: Props) {\r\n\r\n    const styles = {\r\n        bordeColor:'orange',\r\n        borderWidth:2\r\n    }\r\n\r\n    return (\r\n        <List horizontal>\r\n            {\r\n                attendees.map(attendee => (\r\n                    <Popup\r\n                        hoverable\r\n                        key={attendee.username}\r\n                        trigger={\r\n                            <List.Item key={attendee.username} as={Link} to={'/profiles/' + attendee.username}>\r\n                                <Image \r\n                                    size='mini' \r\n                                    circular src={attendee.image || '/assets/user.png'}\r\n                                    bordered\r\n                                    style={attendee.following?styles:null}\r\n                                    />\r\n                            </List.Item>\r\n                        }\r\n                    >\r\n                    <Popup.Content>\r\n                        <ProfileCard profile={attendee}/>\r\n                    </Popup.Content>                            \r\n                    </Popup>\r\n                ))\r\n            }\r\n        </List>\r\n    )\r\n})","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport {format} from 'date-fns';\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\n\r\ninterface Props {\r\n    activity:Activity;\r\n}\r\n\r\nexport default function ActivityListItem({activity}:Props) {\r\n\r\n    return (\r\n       <Segment.Group>\r\n           <Segment>\r\n               {\r\n                   activity.isCancelled &&\r\n                    <Label attached='top' color='red' content='Cancelled' style={{textAlign:'center'}} />\r\n               }\r\n               <Item.Group>\r\n                   <Item>\r\n                       <Item.Image style={{marinBottom:3}} size='tiny' circular src={activity.host?.image || '/assets/user.png'}/>\r\n                       <Item.Content>\r\n                           <Item.Header as={Link} to={'/activities/'+activity.id}>{activity.title}</Item.Header>\r\n                           <Item.Description>Hosted by <Link to={\"/profiles/\"+activity.hostUsername}>{activity.host?.displayName}</Link></Item.Description>\r\n                           {activity.isHost &&(\r\n                               <Item.Description>\r\n                                   <Label basic color='orange'>\r\n                                        You are hosting this activity\r\n                                   </Label>\r\n                               </Item.Description>\r\n                           )}\r\n                            {activity.isGoing && !activity.isHost &&(\r\n                               <Item.Description>\r\n                                   <Label basic color='green'>\r\n                                        You are going to this activity\r\n                                   </Label>\r\n                               </Item.Description>\r\n                           )}\r\n                       </Item.Content>\r\n                   </Item>\r\n               </Item.Group>\r\n           </Segment>\r\n           <Segment>\r\n               <span>\r\n                   <Icon name='clock'/> {format(activity.date!,'dd MMM yyyy h:mm aa')}\r\n                   <Icon name='marker'/> {activity.venue}\r\n               </span>\r\n           </Segment>\r\n           <Segment secondary>\r\n                <ActivityListItemAttendee attendees={activity.attendees!}/>\r\n           </Segment>\r\n           <Segment clearing>\r\n               <span>{activity.description}</span>\r\n               <Button\r\n                as={Link}\r\n                to={'/activities/'+activity.id}\r\n                color='teal'\r\n                floated='right'\r\n                content='View'\r\n               />\r\n           </Segment>\r\n       </Segment.Group>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React, { Fragment } from 'react';\r\nimport { Header } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityListItem from './ActivityListItem';\r\n\r\n\r\nexport default observer(function ActivityList() {\r\n\r\n    const { activityStore } = useStore();\r\n    const { groupedActivities } = activityStore;\r\n\r\n    return (\r\n        <>\r\n            {groupedActivities.map(([group, activities]) => (\r\n                <Fragment key={group}>\r\n                    <Header sub color='teal'>\r\n                        {group}\r\n                    </Header>\r\n                    {activities.map((activity) => (\r\n                        <ActivityListItem key={activity.id} activity={activity} />\r\n                    ))}\r\n                </Fragment>\r\n            ))}\r\n        </>\r\n    )\r\n})","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { Grid, Loader } from 'semantic-ui-react';\r\nimport { PagingParams } from '../../../app/models/pagination';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityFilters from './ActivityFilters';\r\nimport ActivityList from './ActivityList';\r\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\r\n\r\nexport default observer(function ActivityDashboard() {\r\n    const { activityStore } = useStore();\r\n    const { loadActivities, activityRegistry, setPagingParams, pagination } = activityStore;\r\n    const [loadingNext, setLoadingNext] = useState(false)\r\n\r\n    function handleGetnext() {\r\n        setLoadingNext(true);\r\n        setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n        loadActivities().then(() => setLoadingNext(false));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (activityRegistry.size === 0) loadActivities();\r\n    }, [activityRegistry.size, loadActivities])\r\n\r\n    //if (activityStore.loadingInitial && !loadingNext) return <LoadingComponent content='Loading activities...' />\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width='10'>\r\n                {activityStore.loadingInitial && !loadingNext ?(\r\n                    <>\r\n                    <ActivityListItemPlaceholder/>\r\n                    <ActivityListItemPlaceholder/>\r\n                    </>\r\n                ):(<InfiniteScroll\r\n                    pageStart={0}\r\n                    loadMore={handleGetnext}\r\n                    hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\r\n                    initialLoad={false}\r\n                >\r\n                    <ActivityList />\r\n                </InfiniteScroll>)}                \r\n            </Grid.Column>\r\n            <Grid.Column width='6'>\r\n                <ActivityFilters />\r\n            </Grid.Column>\r\n            <Grid.Column width={10}>\r\n                 <Loader active={loadingNext} />\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder:string;\r\n    name:string;\r\n    type?:string;\r\n    label?:string;\r\n}\r\n\r\nexport default function MyTextInput(props:Props){\r\n    const [field,meta] = useField(props.name);\r\n\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {...field} {...props}/>\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ):null}\r\n        </Form.Field>\r\n    )\r\n}","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function LoginForm(){\r\n\r\n    const {userStore}=useStore();\r\n\r\n    return (\r\n        <Formik\r\n         initialValues={{email:'',password:'',error:null}}\r\n         onSubmit={(values,{setErrors}) => userStore.login(values).catch(error => setErrors({error:'Invalid email or password'}))}\r\n        >\r\n            {({handleSubmit,isSubmitting,errors}) =>(\r\n                <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Login to Reactivities' color='teal' textAlign='center'/>\r\n                    <MyTextInput name='email' placeholder='Email' type='email'/>\r\n                    <MyTextInput name='password' placeholder='Password' type='password'/>\r\n                    <ErrorMessage\r\n                        name='error' render={()=>\r\n                        <Label style={{marginBottom:10}} basic color='red' content={errors.error}/>}\r\n                    />\r\n                    <Button loading={isSubmitting} positive content='Login' type='submit' fluid />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n    errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n    return (\r\n        <Message error>\r\n            {errors && (\r\n                <Message.List>\r\n                    {errors.map((err: any, i:any) => (\r\n                            <Message.Item key={i}>{err}</Message.Item>\r\n                    ))}\r\n                </Message.List>\r\n            )}\r\n        </Message>\r\n    )\r\n}","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from 'yup';\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\n\r\nexport default observer(function RegisterForm(){\r\n\r\n    const {userStore}=useStore();\r\n\r\n    return (\r\n        <Formik\r\n         initialValues={{displayName:'',username:'',email:'',password:'',error:null}}\r\n         onSubmit={(values,{setErrors}) => userStore.register(values).catch(error => \r\n            setErrors({error}))}\r\n            validationSchema={Yup.object({\r\n                displayName:Yup.string().required(),\r\n                username:Yup.string().required(),\r\n                email:Yup.string().required().email(),\r\n                password:Yup.string().required(),\r\n            })}\r\n        >\r\n            {({handleSubmit,isSubmitting,errors,isValid,dirty}) =>(\r\n                <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Sign up to Reactivities' color='teal' textAlign='center'/>\r\n                    <MyTextInput name='displayName' placeholder='Display Name'/>\r\n                    <MyTextInput name='username' placeholder='Username'/>\r\n                    <MyTextInput name='email' placeholder='Email' type='email'/>\r\n                    <MyTextInput name='password' placeholder='Password' type='password'/>\r\n                    <ErrorMessage\r\n                        name='error' render={()=>\r\n                        <ValidationErrors errors={errors.error}/>}\r\n                    />\r\n                    <Button disabled={!isValid || !dirty || isSubmitting} \r\n                    loading={isSubmitting} positive content='Register' type='submit' fluid />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Header, Segment, Image, Button, Divider } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport LoginForm from '../users/LoginForm';\r\nimport RegisterForm from '../users/RegisterForm';\r\n\r\nexport default observer(function HomePage() {\r\n\r\n    const { userStore, modalStore } = useStore();\r\n\r\n    return (\r\n        <Segment inverted textAlign='center' vertical className='masthead'>\r\n            <Container text>\r\n                <Header as='h1' inverted>\r\n                    <Image size='massive' src='/assets/logo.png' alt='logo' style={{ marginBottom: 12 }} />\r\n                    Reactivities\r\n                </Header>\r\n                {userStore.isLoggedIn ? (\r\n                    <>\r\n                        <Header as='h2' inverted content='Welcome to Reactivities' />\r\n                        <Button as={Link} to='/activities' size='huge' inverted>\r\n                            Go to Activities!\r\n                        </Button>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted>\r\n                            Login!\r\n                        </Button>\r\n                        <Button onClick={() => modalStore.openModal(<RegisterForm/>)} size='huge' inverted>\r\n                            Register!\r\n                        </Button>\r\n                        <Divider horizontal inverted>Or</Divider>\r\n                        <Button\r\n                            loading={userStore.fbLoading}\r\n                            size='huge'\r\n                            inverted\r\n                            color='facebook'\r\n                            content='Login with Facebook'\r\n                            onClick={userStore.facebookLogin}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n            </Container>\r\n        </Segment>\r\n    )\r\n})","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Prop {\r\n    inverted?:boolean;\r\n    content?:string;\r\n}\r\n\r\nexport default function LoadingComponent({inverted = true,content='Loading...'}:Prop){\r\n    return (\r\n        <Dimmer active={true} inverted={inverted}>\r\n            <Loader content={content}/>\r\n        </Dimmer>\r\n    )\r\n}","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder:string;\r\n    name:string;\r\n    rows:number;\r\n    label?:string;\r\n}\r\n\r\nexport default function MyTextArea(props:Props){\r\n    const [field,meta] = useField(props.name);\r\n\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <textarea {...field} {...props}/>\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ):null}\r\n        </Form.Field>\r\n    )\r\n}","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label, Select } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    options: any;\r\n    label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n    const [field, meta, helpers] = useField(props.name);\r\n\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <Select\r\n                clearable\r\n                options={props.options}\r\n                value={field.value || null}\r\n                onChange={(e,d)=> helpers.setValue(d.value)}\r\n                onBlur={() => helpers.setTouched(true)}\r\n                placeholder={props.placeholder}\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}","export const categoryOptions = [\r\n    {text:'Drinks',value:'drinks'},\r\n    {text:'Culture',value:'culture'},\r\n    {text:'Film',value:'film'},\r\n    {text:'Food',value:'food'},\r\n    {text:'Music',value:'music'},\r\n    {text:'Travel',value:'travel'},\r\n]","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\nimport DatePicker,{ReactDatePickerProps} from 'react-datepicker';\r\n\r\nexport default function MyDateInput(props:Partial<ReactDatePickerProps>){\r\n    const [field,meta,helpers] = useField(props.name!);\r\n\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <DatePicker \r\n                {...field}\r\n                {...props}\r\n                selected={(field.value && new Date(field.value))||null}\r\n                onChange={value => helpers.setValue(value)}\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ):null}\r\n        </Form.Field>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from '../../../app/common/form/MyTextInput';\r\nimport MyTextArea from '../../../app/common/form/MyTextArea';\r\nimport MySelectInput from '../../../app/common/form/MySelectInput';\r\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\r\nimport MyDateInput from '../../../app/common/form/MyDateInput';\r\nimport { ActivityFormValues } from '../../../app/models/activity';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport default observer(function ActivityForm() {\r\n    const history = useHistory();\r\n    const { activityStore } = useStore();\r\n    const { createActivity, updateActivity, loadActivity, loadingInitial } = activityStore;\r\n    const { id } = useParams<{ id: string }>();\r\n    const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('The activity title is required'),\r\n        description: Yup.string().required('The activity description is required'),\r\n        category: Yup.string().required(),\r\n        date: Yup.string().required('Date is required').nullable(),\r\n        venue: Yup.string().required(),\r\n        city: Yup.string().required(),\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (id) loadActivity(id).then(activity => setActivity(new ActivityFormValues(activity!)))\r\n    }, [id, loadActivity])\r\n\r\n    function handleFormSubmit(activity:ActivityFormValues) {\r\n        if (!activity.id) {\r\n            let newActivity = {\r\n                ...activity,\r\n                id: uuid()\r\n            };\r\n            createActivity(newActivity).then(() => {\r\n                history.push('/activities/' + newActivity.id);\r\n            });\r\n        } else {\r\n            updateActivity(activity).then(() => {\r\n                history.push('/activities/' + activity.id);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    if (loadingInitial) return <LoadingComponent content='Loading activity...' />\r\n\r\n    return (\r\n        <Segment clearing>\r\n            <Header content='Activity Details' sub  color='teal' />\r\n            <Formik\r\n                validationSchema={validationSchema}\r\n                enableReinitialize\r\n                initialValues={activity}\r\n                onSubmit={values => handleFormSubmit(values)}>\r\n                {({ handleSubmit,isValid,isSubmitting,dirty }) => (\r\n                    <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                        <MyTextInput name='title' placeholder='Title' />\r\n                        <MyTextArea rows={3} placeholder='Description' name='description' />\r\n                        <MySelectInput options={categoryOptions} placeholder='Category' name='category' />\r\n                        <MyDateInput\r\n                            placeholderText='Date'\r\n                            name='date'\r\n                            showTimeSelect\r\n                            timeCaption='time'\r\n                            dateFormat='MMMM d, yyyy h:mm aa'\r\n                        />\r\n                        <Header content='Location Details' sub  color='teal' />\r\n                        <MyTextInput placeholder='City' name='city' />\r\n                        <MyTextInput placeholder='Venue' name='venue' />\r\n                        <Button \r\n                        disabled={isSubmitting || !dirty ||!isValid}\r\n                        loading={isSubmitting} \r\n                        floated='right' \r\n                        positive type='submit' content='Submit' />\r\n                        <Button as={Link} to='/activities' floated='right' type='button' content='Cancel' />\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </Segment>\r\n    )\r\n})","import { Formik, Form, Field, FieldProps } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Segment, Header, Comment, Loader } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport { formatDistanceToNow } from 'date-fns';\r\n\r\ninterface Props {\r\n    activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n    const { commentStore } = useStore();\r\n\r\n    useEffect(() => {\r\n        if (activityId) {\r\n            commentStore.createHubConnection(activityId);\r\n        }\r\n        return () => {\r\n            commentStore.clearComments();\r\n        }\r\n    }, [commentStore, activityId]);\r\n\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                attached='top'\r\n                inverted\r\n                color='teal'\r\n                style={{ border: 'none' }}\r\n            >\r\n                <Header>Chat about this event</Header>\r\n            </Segment>\r\n            <Segment attached clearing>\r\n                \r\n            <Formik\r\n                        onSubmit={(values, { resetForm }) =>\r\n                            commentStore.addComment(values).then(() => resetForm())}\r\n                        initialValues={{ body: '' }}\r\n                        validationSchema={Yup.object({\r\n                            body: Yup.string().required()\r\n                        })}\r\n                    >\r\n                        {({ isSubmitting, isValid, handleSubmit }) => (\r\n                            <Form className='ui form'>\r\n                                <Field name='body'>\r\n                                    {\r\n                                        (props: FieldProps) => (\r\n                                            <div style={{ position: 'relative' }}>\r\n                                                <Loader active={isSubmitting} />\r\n                                                <textarea\r\n                                                    placeholder='Enter your comment (Enter to submit, SHIFT + enter for new line)'\r\n                                                    rows={2}\r\n                                                    {...props.field}\r\n                                                    onKeyPress={e => {\r\n                                                        if (e.key === 'Enter' && e.shiftKey) {\r\n                                                            return;\r\n                                                        }\r\n                                                        if(e.key === 'Enter'){\r\n                                                            e.preventDefault();\r\n                                                            isValid && handleSubmit();\r\n                                                        }\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                </Field>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                <Comment.Group>\r\n                    {\r\n                        commentStore.comments.map(comment => (\r\n                            <Comment key={comment.id}>\r\n                                <Comment.Avatar src={comment.image || '/assets/user.png'} />\r\n                                <Comment.Content>\r\n                                    <Comment.Author as={Link} to={'/profiles/' + comment.username} >{comment.displayName}</Comment.Author>\r\n                                    <Comment.Metadata>\r\n                                        <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                                    </Comment.Metadata>\r\n                                    <Comment.Text style={{whiteSpace:'pre-wrap'}}>{comment.body}</Comment.Text>\r\n                                </Comment.Content>\r\n                            </Comment>\r\n                        ))\r\n                    }\r\n                </Comment.Group>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Item, Segment, Image, Label } from 'semantic-ui-react'\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { format } from 'date-fns';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nconst activityImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n    const { activityStore: { updateAttendace, loading, cancelActivityToggle } } = useStore();\r\n    return (\r\n        <Segment.Group>\r\n            <Segment basic attached='top' style={{ padding: '0' }}>\r\n                {\r\n                    activity.isCancelled &&\r\n                    <Label style={{ position: 'absolute', zIndex: 1000, left: -14, top: 20 }}\r\n                        ribbon color='red' content='Cancelled' />\r\n                }\r\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle} />\r\n                <Segment style={activityImageTextStyle} basic>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size='huge'\r\n                                    content={activity.title}\r\n                                    style={{ color: 'white' }}\r\n                                />\r\n                                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\r\n                                <p>\r\n                                    Hosted by <strong><Link to={'/profiles/' + activity.host?.displayName}>{activity.host?.displayName}</Link></strong>\r\n                                </p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n            <Segment clearing attached='bottom'>\r\n                {\r\n                    activity.isHost ? (\r\n                        <>\r\n                            <Button\r\n                                color={activity.isCancelled ? 'green' : 'red'}\r\n                                floated='left'\r\n                                basic\r\n                                content={activity.isCancelled ? 'Re-activate Activity' : 'Cancel Activity'}\r\n                                onClick={cancelActivityToggle}\r\n                                loading={loading}\r\n                            />\r\n                            <Button as={Link}\r\n                                disabled={activity.isCancelled}\r\n                                to={'/manage/' + activity.id}\r\n                                color='orange'\r\n                                floated='right'>\r\n                                Manage Event\r\n                            </Button>\r\n                        </>\r\n                    ) : activity.isGoing ? (\r\n                        <Button loading={loading} onClick={updateAttendace}>Cancel attendance</Button>\r\n                    ) : (\r\n                        <Button disabled={activity.isCancelled} loading={loading} onClick={updateAttendace} color='teal'>Join Activity</Button>\r\n                    )}\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})\r\n","\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\nimport {format} from 'date-fns';\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{activity.description}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n            <span>\r\n              {format(activity.date!,'dd MMM yyyy h:mm aa')}\r\n            </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='marker' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{activity.venue}, {activity.city}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import React from 'react'\r\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Activity } from '../../../app/models/activity'\r\n\r\ninterface Props {\r\n    activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({ activity: { attendees, host } }: Props) {\r\n    if (!attendees) return null;\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                style={{ border: 'none' }}\r\n                attached='top'\r\n                secondary\r\n                inverted\r\n                color='teal'\r\n            >\r\n                {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\r\n            </Segment>\r\n            <Segment attached>\r\n                <List relaxed divided>\r\n                    {\r\n                        attendees.map(attendee => (\r\n                            <Item style={{ position: 'relative' }} key={attendee.username}>\r\n                                {attendee.username === host?.username &&\r\n                                    <Label\r\n                                        style={{ position: 'absolute' }}\r\n                                        color='orange'\r\n                                        ribbon='right'\r\n                                    >\r\n                                        Host\r\n                                    </Label>}\r\n                                <Image size='tiny' src={attendee.image || '/assets/user.png'} />\r\n                                <Item.Content verticalAlign='middle'>\r\n                                    <Item.Header as='h3'>\r\n                                        <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\r\n                                    </Item.Header>\r\n                                    {attendee.following &&\r\n                                    <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\r\n                                </Item.Content>\r\n                            </Item>\r\n                        ))\r\n                    }\r\n                </List>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityDetailedChat from './ActivityDetailedChat';\r\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\r\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\r\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\r\n\r\n\r\nexport default observer(function ActivityDetails() {\r\n    \r\n    const {activityStore} = useStore();\r\n    const {selectedActivity:activity,loadActivity,loadingInitial,clearSelectedActivity} = activityStore;\r\n    const {id} = useParams<{id:string}>();\r\n    \r\n    useEffect(()=>{\r\n        if(id) loadActivity(id);\r\n        return ()=>clearSelectedActivity();\r\n    },[id,loadActivity,clearSelectedActivity]);\r\n\r\n    if(loadingInitial || !activity) return <LoadingComponent/>;\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={10}>\r\n                <ActivityDetailedHeader activity={activity}/>\r\n                <ActivityDetailedInfo activity={activity}/>\r\n                <ActivityDetailedChat activityId={activity.id}/>\r\n            </Grid.Column>\r\n            <Grid.Column width={6}>\r\n                <ActivityDetailedSidebar activity={activity}/>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import React, { useState } from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nexport default function TestErrors() {\r\n    const baseUrl = process.env.REACT_APP_API_URL;\r\n    const [errors,setErrors] = useState(null);\r\n\r\n    function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors &&\r\n                <ValidationErrors errors={errors}/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound(){\r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search'/>\r\n                Oops - we've looked everywhere and could not find this.\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary>\r\n                    Return to activities page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ServerError(){\r\n    const {commonStore} = useStore();\r\n    return (\r\n        <Container>\r\n            <Header as='h1' content='Server Error'/>\r\n            <Header sub as='h5' color='red' content={commonStore.error?.message}/>\r\n            {commonStore.error?.details &&\r\n                <Segment>\r\n                    <Header as='h4' content='Stack trace' color='teal'/>\r\n                    <code style={{marginTop:'10px'}}>{commonStore.error.details}</code>\r\n                </Segment>\r\n            }\r\n        </Container>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nexport default observer(function ModalContainer(){\r\n    const {modalStore} = useStore();\r\n\r\n    return (\r\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size=\"mini\">\r\n            <Modal.Content>\r\n                {modalStore.modal.body}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n})","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from 'yup';\r\ninterface Props {\r\n    setEditMode: (editMode: boolean) => void;\r\n}\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n    const { profileStore: { profile, updateProfile } } = useStore();\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                displayName: profile?.displayName, bio:\r\n                    profile?.bio\r\n            }}\r\n            onSubmit={values => {\r\n                updateProfile(values).then(() => {\r\n                    setEditMode(false);\r\n                })\r\n            }}\r\n            validationSchema={Yup.object({\r\n                displayName: Yup.string().required()\r\n            })}\r\n        >\r\n            {({ isSubmitting, isValid, dirty }) => (\r\n                <Form className='ui form'>\r\n                    <MyTextInput placeholder='Display Name'\r\n                        name='displayName' />\r\n                    <MyTextArea rows={3} placeholder='Add your bio'\r\n                        name='bio' />\r\n                    <Button\r\n                        positive\r\n                        type='submit'\r\n                        loading={isSubmitting}\r\n                        content='Update profile'\r\n                        floated='right'\r\n                        disabled={!isValid || !dirty}\r\n                    />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","import React, { useState } from 'react';\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\nimport { observer } from 'mobx-react-lite';\r\nexport default observer(function ProfileAbout() {\r\n    const { profileStore } = useStore();\r\n    const { isCurrentUser, profile } = profileStore;\r\n    const [editMode, setEditMode] = useState(false);\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width='16'>\r\n                    <Header floated='left' icon='user' content={`About ${profile?.displayName}`} />\r\n                    {isCurrentUser && (\r\n                        <Button\r\n                            floated='right'\r\n                            basic\r\n                            content={editMode ? 'Cancel' : 'Edit Profile'}\r\n                            onClick={() => setEditMode(!editMode)}\r\n                        />\r\n                    )}\r\n                </Grid.Column>\r\n                <Grid.Column width='16'>\r\n                    {editMode ? <ProfileEditForm setEditMode={setEditMode} /> :\r\n                        <span style={{ whiteSpace: 'pre-wrap' }}>{profile?.bio}</span>}\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import React, { SyntheticEvent, useEffect } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { UserActivity } from '../../app/models/userActivity';\r\nconst panes = [\r\n    { menuItem: 'Future Events', pane: { key: 'future' } },\r\n    { menuItem: 'Past Events', pane: { key: 'past' } },\r\n    { menuItem: 'Hosting', pane: { key: 'hosting' } }\r\n];\r\nexport default observer(function ProfileActivities() {\r\n    const { profileStore } = useStore();\r\n    const {\r\n        loadUserActivities,\r\n        profile,\r\n        loadingActivities,\r\n        userActivities\r\n    } = profileStore;\r\n    useEffect(() => {\r\n        loadUserActivities(profile!.username);\r\n    }, [loadUserActivities, profile]);\r\n    const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n        loadUserActivities(profile!.username, panes[data.activeIndex as\r\n            number].pane.key);\r\n    };\r\n    return (\r\n        <Tab.Pane loading={loadingActivities}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='calendar'\r\n                        content={'Activities'} />\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Tab\r\n                        panes={panes}\r\n                        menu={{ secondary: true, pointing: true }}\r\n                        onTabChange={(e, data) => handleTabChange(e, data)}\r\n                    />\r\n                    <br />\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {userActivities.map((activity: UserActivity) => (\r\n                            <Card\r\n                                as={Link}\r\n                                to={`/activities/${activity.id}`}\r\n                                key={activity.id}\r\n                            >\r\n                                <Image\r\n                                    src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                                    style={{\r\n                                        minHeight: 100, objectFit:\r\n                                            'cover'\r\n                                    }}\r\n                                />\r\n                                <Card.Content>\r\n                                    <Card.Header\r\n                                        textAlign='center'>{activity.title}</Card.Header>\r\n                                    <Card.Meta textAlign='center'>\r\n                                        <div>{format(new Date(activity.date),\r\n                                            'do LLL')}</div>\r\n                                        <div>{format(new Date(activity.date),\r\n                                            'h:mm a')}</div>\r\n                                    </Card.Meta>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileCard from './ProfileCard';\r\n\r\nexport default observer(function ProfileFollowings(){\r\n    const {profileStore} = useStore();\r\n    const {profile,followings,loadingFollowings,activeTab} = profileStore;\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingFollowings}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='user' content={activeTab === 3 ? 'People following '+profile?.displayName: 'People '+profile?.displayName +' is following'}/>\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {\r\n                            followings.map(profile =>(\r\n                                <ProfileCard key={profile.username} profile={profile} />\r\n                            ))\r\n                        }\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n\r\n})","import React from \"react\";\r\nimport Cropper from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\ninterface Props {\r\n    imagePreview: string;\r\n    setCropper:(cropper:Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({ imagePreview,setCropper }: Props) {\r\n\r\n    return (\r\n        <Cropper\r\n            src={imagePreview}\r\n            style={{ height: 200, width: \"100%\" }}\r\n            initialAspectRatio={1}\r\n            aspectRatio={1}\r\n            preview='.img-preview'\r\n            guides={false}\r\n            viewMode={1}\r\n            autoCropArea={1}\r\n            background={false}\r\n            onInitialized={cropper => setCropper(cropper)}\r\n        />\r\n    )\r\n}","import React, {useCallback} from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport { Header, Icon } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  setFiles:(files:any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({setFiles}:Props) {\r\n\r\n  const dzStyles ={\r\n    border:'dashed 3px #eee',\r\n    borderColor:'#eee',\r\n    borderRadius:'#5px',\r\n    paddingTop:'30px',\r\n    textAlign: 'center' as 'center',\r\n    height:200\r\n  }\r\n\r\n  const dzActive ={\r\n    borderColor:'green'\r\n  }\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setFiles(acceptedFiles.map((file:any) => Object.assign(file,{\r\n      preview:URL.createObjectURL(file)\r\n    })))\r\n  }, [setFiles])\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n  return (\r\n    <div {...getRootProps()} style={isDragActive?{...dzStyles,...dzActive}:dzStyles}>\r\n      <input {...getInputProps()} />\r\n      <Icon name='upload' size='huge' />\r\n      <Header content='Drop image here'/>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props {\r\n    loading:boolean;\r\n    uploadPhoto:(file:Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({loading,uploadPhoto}:Props){\r\n\r\n    const [files,setFiles] = useState<any>([]);\r\n    const [cropper,setCropper] = useState<Cropper>();\r\n\r\n    function onCrop(){\r\n        if(cropper){\r\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        return () =>{\r\n            files.forEach((file:any)=> URL.revokeObjectURL(file.preview));\r\n        }\r\n    },[files])\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' content='Step 1 - Add Photo' />\r\n                <PhotoWidgetDropzone setFiles={setFiles}/>\r\n            </Grid.Column>\r\n            <Grid.Column width={1}/>\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' content='Step 2 - Resize image' />\r\n                {files && files.length > 0 && (\r\n                    <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\r\n                )}\r\n            </Grid.Column>\r\n            <Grid.Column width={1}/>\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' content='Step 3 - Preview & Upload' />\r\n                {files && files.length > 0 &&\r\n                <>\r\n                <div className='img-preview' style={{minHeight:200,overflow:'hidden'}} />\r\n                <Button.Group widths={2}>\r\n                    <Button loading={loading} onClick={onCrop} positive icon='check' />\r\n                    <Button disabled={loading} onClick={()=>setFiles([])} icon='close' />\r\n                </Button.Group>\r\n                </>}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Card, Header, Tab, Image, Grid, Button } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/ImageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n    profile: Profile\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n    const { profileStore: { isCurrentUser,uploadPhoto,uploading,setMainPhoto,loading,deletePhoto } } = useStore();\r\n    const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n    const [target,setTarget] = useState('');\r\n\r\n    function handlePhotoUpload(file:Blob)\r\n    {\r\n        uploadPhoto(file).then(()=>setAddPhotoMode(false));\r\n    }\r\n\r\n    function handleSetMainPhoto(photo:Photo,e: SyntheticEvent<HTMLButtonElement>)\r\n    {\r\n        setTarget(e.currentTarget.name);\r\n        setMainPhoto(photo);\r\n    }\r\n\r\n    function handleDeletePhoto(photo:Photo,e: SyntheticEvent<HTMLButtonElement>)\r\n    {\r\n        setTarget(e.currentTarget.name);\r\n        deletePhoto(photo);\r\n    }\r\n\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='image' content='Photos' />\r\n                    {\r\n                        isCurrentUser && (\r\n                            <Button floated='right' basic\r\n                                content={addPhotoMode ? 'Cancel' : 'Add Photo'}\r\n                                onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n                            />\r\n                        )\r\n                    }\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    {\r\n                        addPhotoMode ? (\r\n                            <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading} />\r\n                        ) : (\r\n                            <Card.Group itemsPerRow={5}>\r\n                                {\r\n                                    profile.photos?.map(photo => (\r\n                                        <Card key={photo.id}>\r\n                                            <Image src={photo.url} />\r\n                                            {\r\n                                                isCurrentUser && (\r\n                                                    <Button.Group fluid widths={2}>\r\n                                                        <Button \r\n                                                            basic\r\n                                                            color='green'\r\n                                                            content='Main'\r\n                                                            name={'main'+photo.id}\r\n                                                            disabled={photo.isMain}\r\n                                                            loading={target === 'main' + photo.id && loading}\r\n                                                            onClick={e=>handleSetMainPhoto(photo,e)}\r\n                                                        />\r\n                                                        <Button \r\n                                                            basic \r\n                                                            color='red'\r\n                                                            name={photo.id}\r\n                                                            icon='trash'   \r\n                                                            disabled={photo.isMain}                                                         \r\n                                                            loading={target === photo.id && loading}\r\n                                                            onClick={e=>handleDeletePhoto(photo,e)}\r\n                                                            />\r\n                                                    </Button.Group>\r\n                                                )\r\n                                            }\r\n                                        </Card>\r\n                                    ))\r\n                                }\r\n                            </Card.Group>\r\n                        )\r\n                    }\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Tab } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileActivities from './ProfileActivities';\r\nimport ProfileFollowings from './ProfileFollowings';\r\nimport ProfilePhotos from './ProfilePhotos';\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n\r\n    const {profileStore} = useStore();\r\n\r\n    const panes = [\r\n        { menuItem: 'About', render: () => <ProfileAbout /> },\r\n        {\r\n            menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} />\r\n        },\r\n        {\r\n            menuItem: 'Events', render: () =>  <ProfileActivities />\r\n        },\r\n        {\r\n            menuItem: 'Followers', render: () => <ProfileFollowings/>\r\n        },\r\n        {\r\n            menuItem: 'Following', render: () => <ProfileFollowings/>\r\n        },\r\n    ];\r\n    return (\r\n        <Tab\r\n            menu={{ fluid: true, vertical: true }}\r\n            menuPosition='right'\r\n            panes={panes}\r\n            onTabChange={(e,data)=>profileStore.setActiveTab(data.activeIndex)}\r\n        />\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Divider, Grid, Header, Item, Segment, Statistic } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n    profile: Profile\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile }: Props) {\r\n    return (\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width={12}>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image avatar size='small' src={profile?.image || '/assets/user.png'} />\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Header as='h1' content={profile?.displayName} />\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Statistic.Group widths={2}>\r\n                        <Statistic label='Followers' value={profile.followersCount} />\r\n                        <Statistic label='Following' value={profile.followingCount} />\r\n                    </Statistic.Group>\r\n                    <Divider />\r\n                   <FollowButton profile={profile} />\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\n\r\nexport default observer(function ProfilePage() {\r\n    const { username } = useParams<{ username: string }>();\r\n    const { profileStore } = useStore();\r\n    const { loadingProfile, loadProfile, profile,setActiveTab } = profileStore;\r\n\r\n    useEffect(() => {\r\n        loadProfile(username);\r\n\r\n        return ()=>{\r\n            setActiveTab(0);\r\n        }\r\n    }, [loadProfile, username,setActiveTab])\r\n\r\n    if (loadingProfile) return <LoadingComponent content='Loading profile...' />\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={16}>\r\n                {profile &&\r\n                    <ProfileHeader profile={profile} />}\r\n                {profile &&\r\n                <ProfileContent profile={profile}  />}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n    component:React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({component:Component,...rest}:Props){\r\n    const {userStore:{isLoggedIn}} = useStore();\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => isLoggedIn ? <Component {...props}/>:<Redirect to='/'/>}\r\n        />\r\n    )\r\n}","import { Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, useLocation } from 'react-router';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport TestErrors from '../../features/errors/TestError';\nimport { ToastContainer } from 'react-toastify';\nimport NotFound from '../../features/errors/NotFound';\nimport { Switch } from 'react-router-dom';\nimport ServerError from '../../features/errors/ServerError';\nimport LoginForm from '../../features/users/LoginForm';\nimport { useStore } from '../stores/store';\nimport { useEffect } from 'react';\nimport LoadingComponent from './LoadingComponent';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\n\nfunction App() {\n\n  const location = useLocation();\n  const {commonStore,userStore} = useStore();\n\n  useEffect(()=>{\n    if(commonStore.token){\n      userStore.getUser().finally(()=>commonStore.setAppLoaded());\n    }else{\n      userStore.getFacebookLoginStatus().then(()=>commonStore.setAppLoaded());\n      \n    }\n  },[commonStore,userStore])\n\n  if(!commonStore.appLoaded) return <LoadingComponent content='Loading app...' />\n\n  return (\n    <>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer/>\n      <Route exact path='/' component={HomePage} />\n      <Route\n        path={'/(.+)'}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: '7em' }}>\n              <Switch>\n                <PrivateRoute exact path='/activities' component={ActivityDashboard} />\n                <PrivateRoute path='/activities/:id' component={ActivityDetails} />\n                <PrivateRoute key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm} />\n                <PrivateRoute path='/profiles/:username' component={ProfilePage} />\n                <PrivateRoute path='/errors' component={TestErrors} />\n                <Route path='/server-error' component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nexport default function ScrollToTop(){\r\n    const {pathname} = useLocation();\r\n\r\n    useEffect(()=>{\r\n        window.scrollTo(0,0);\r\n    });\r\n\r\n    return null;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreContext.Provider value={store}>\n      <Router history={history}>\n        <ScrollToTop/>\n        <App />\n      </Router>\n    </StoreContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}